
@model List<avSVAW.Models.TotalStopTypeForm>

@{
    /**/
    ViewBag.Title = Resources.Language.Report + " " + Resources.Language.Running;
    DateTime _current = DateTime.Now;
    int _month = _current.Month, _year = _current.Year;

}
@section header{
    @ViewBag.Title
}

<style>
    .working-percent {
        float:left;
        background-color: forestgreen;
        color:white;
        text-align:center;
    }
    .un-working-percent {
        float:right;
        background-color: gray;
    }

</style>

<!--Tiêu chí tìm kiếm-->
<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-body">
                @using (Html.BeginForm("StopReportByType", "Report", FormMethod.Get, new { @class = "form-horizontal form-label-left" }))
                {
                <div class="form-group">
                    <div class="col-sm-2">
                        <label class="control-label">@Resources.Language.FromDate</label>
                    </div>
                    <div class="col-sm-2">
                        <div id="divFromDate" class="input-group input-append">
                            <input id="FromDate" name="FromDate" data-format="yyyy/MM/dd" value="@ViewBag.FromDate" type="text" class="form-control col-md-5 col-xs-12"></input>
                            <div class="input-group-addon">
                                <i data-time-icon="icon-time" data-date-icon="icon-calendar"> </i>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-2">
                        <label class="control-label">@Resources.Language.ToDate</label>
                    </div>
                    <div class="col-sm-2">
                        <div id="divToDate" class="input-group input-append">
                            <input id="ToDate" name="ToDate" data-format="yyyy/MM/dd" value="@ViewBag.ToDate" type="text" class="form-control col-md-5 col-xs-12"></input>
                            <div class="input-group-addon">
                                <i data-time-icon="icon-time" data-date-icon="icon-calendar"> </i>
                            </div>
                        </div>
                    </div>
                    @Html.Partial("~/Views/Common/TempWorkShift.cshtml")

                </div>
                    <div class="form-group">
                        <div class="col-sm-2">&nbsp;</div>
                        <div class="col-sm-4">
                            <button type="submit" class="btn btn-success" id="ViewReport"><i class="fa fa-search"></i>&nbsp;@Resources.Language.ViewReport</button>
                            &nbsp;
                            &nbsp;
                            <button type="button" onclick="ExportExcel();" class="btn btn-primary"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;@Resources.Language.ExportExcel</button>
                            &nbsp;
                            &nbsp;
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-body ">
                <!-- start project list -->
                <div class="col-md-12 col-sm-12 col-xs-12">


                    @{
                        double MaxEff = -1;
                        double MinEff = 101;
                        double AverageEff = 0;
                        double TotalEff = 0;
                        int iCount = 1, iWorkingCount = 0;

                        double TotalRunning = 0, TotalStop = 0, TotalPlan = 0, TotalWorkingPercent = 0;
                        int TotalNodes = 0;
                        string _NodeName = "";

                    }
                    <table id="EFF" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Resources.Language.NodeType</th>
                                <th>@Resources.Language.NumberOfNode</th>
                                <th>@Resources.Language.RunningDuration (H)</th>
                                <th>@Resources.Language.StopDuration (H)</th>
                                <th>@Resources.Language.WorkingPlan (H)</th>
                                <th>@Resources.Language.EffOperation (%)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @iCount
                                    </td>

                                    <td>
                                        <a href="/Report/EffReport?FromDate=@ViewBag.FromDate&ToDate=@ViewBag.ToDate&NodeType=@item.NodeTypeId&WorkShift=@ViewBag.WorkShift">
                                            @{ 
                                                _NodeName = item.NodeTypeName;
                                                if (item.NodeTypeName.StartsWith("B-"))
                                                {
                                                    _NodeName = "---- " + _NodeName;
                                                }
                                               }

                                            @_NodeName
                                        </a>
                                    </td>

                                    <td style="text-align:right">
                                        @item.NumberOfNodes.ToString("#,##0")
                                    </td>

                                    <td style="text-align:right">
                                        @item.RunningDurationInHour.ToString("#,##0.00")
                                    </td>

                                    <td style="text-align:right">
                                        @item.StopDurationInHour.ToString("#,##0.00")
                                    </td>

                                    <td style="text-align:right">
                                        @item.PlanDurationInHour.ToString("#,##0")
                                    </td>

                                    <td style="width:40%">
                                        <div class="col-md-12 col-sm-12 col-xs-12 ">
                                            @{
                                                //var WorkingPercent = item.WorkingPercent;
                                                var WorkingPercent = Convert.ToInt32(Math.Round(item.WorkingPercent,0));
                                                if (WorkingPercent > 100)
                                                {
                                                    WorkingPercent = 100;
                                                }
												if (WorkingPercent < 10)
												{
													WorkingPercent = 10;
												}
												
                                                var UnWorkingPercent = 100 - item.WorkingPercent;
                                                if (UnWorkingPercent < 100)
                                                {
                                                    if (UnWorkingPercent > 96)
                                                    {
                                                        UnWorkingPercent = 96;
                                                    }
                                                }
                                            }
                                            <table width="100%" class="un-working-percent">
                                                <tr>
                                                    @if (WorkingPercent >= 0)
                                                    {
                                                        <td class="working-percent" width="@WorkingPercent%;">
                                                            @item.WorkingPercent %
                                                        </td>
                                                    }
                                                    @if (WorkingPercent < 100)
                                                    {
                                                        <td class="un-working-percent">
                                                        </td>
                                                    }
                                                </tr>
                                            </table>
                                        </div>
                                    </td>

                                    @{
                                        if (item.WorkingPercent >= 0)
                                        {
                                            if (item.WorkingPercent > MaxEff)
                                            {
                                                MaxEff = item.WorkingPercent;
                                            }
                                            if (item.WorkingPercent < MinEff)
                                            {
                                                MinEff = item.WorkingPercent;
                                            }

                                            TotalEff += item.WorkingPercent;
                                            iWorkingCount++;
                                        }
                                        iCount++;
                                        if (item.NodeTypeName != "B")
                                        {
                                            TotalNodes += item.NumberOfNodes;
                                            TotalRunning += item.RunningDurationInHour;
                                            TotalStop += item.StopDurationInHour;
                                            TotalPlan += item.PlanDurationInHour;
                                            TotalWorkingPercent += item.NumberOfNodes * item.WorkingPercent;
                    
                                        }
                                    }

                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            @{
                                if (MinEff == 101)
                                {
                                    MinEff = 0;
                                }

                                if (MaxEff == -1)
                                {
                                    MaxEff = 0;
                                }
                                AverageEff = Math.Round(TotalEff / (double)iWorkingCount, 1);
								if(TotalNodes>0){
                                TotalWorkingPercent = Math.Round(TotalWorkingPercent / (double)TotalNodes, 1);
								}
                            }
                            @*<tr>
                                <th colspan="6" style="text-align:right">@Resources.Language.Max</th>
                                <th style="text-align:right">@MaxEff</th>
                            </tr>
                            <tr>
                                <th colspan="6" style="text-align:right">@Resources.Language.Min</th>
                                <th style="text-align:right">@MinEff</th>
                            </tr>
                            <tr>
                                <th colspan="6" style="text-align:right">@Resources.Language.Average</th>
                                <th style="text-align:right">@AverageEff</th>
                            </tr>*@
                            
                            <tr>
                                <th style="text-align:right">&nbsp;</th>
                                <th style="text-align:right">@Resources.Language.Total</th>
                                <th style="text-align:right">@TotalNodes.ToString("#,##0")</th>
                                <th style="text-align:right">@TotalRunning.ToString("#,##0")</th>
                                <th style="text-align:right">@TotalStop.ToString("#,##0")</th>
                                <th style="text-align:right">@TotalPlan.ToString("#,##0")</th>
                                <th style="text-align:center">@TotalWorkingPercent % </th>
                            </tr>

                        </tfoot>
                    </table>

                    <div class="ln_solid"></div>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @*<script src="~/assets/js/order.js"></script>*@
    <script type="text/javascript">
        function ExportExcel() {
            var url = '@Url.Action("StopTypeToExcel", "Report")';
            var _fromDate = $('#FromDate').val();
            var _toDate = $('#ToDate').val();
             var _workShift = $('#WorkShift').val();
            //?FromDate = 2019 % 2F05% 2F01& ToDate=2019 % 2F05% 2F09& Customer=3
            var ExcelURL = url + '?FromDate=' + _fromDate + '&ToDate=' + _toDate + '&WorkShift=' + _workShift;
            window.location.href = ExcelURL;
    };

        $(function () {
            $('#inventory').DataTable({
                'paging': true,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': false,
                'autoWidth': false
            })
        })
        $(document).ready(function () {


            $('#divFromDate').datetimepicker({
                pickTime: false,
                minView: "month"
            });
            $('#divToDate').datetimepicker({
                pickTime: false
            });

            //$('#Customer').select2({
            //});

        });
    </script>


}

