#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="avSVAWF1")]
	public partial class AvaniDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblConfigService(tblConfigService instance);
    partial void UpdatetblConfigService(tblConfigService instance);
    partial void DeletetblConfigService(tblConfigService instance);
    partial void InserttblEventDef(tblEventDef instance);
    partial void UpdatetblEventDef(tblEventDef instance);
    partial void DeletetblEventDef(tblEventDef instance);
    partial void InserttblEventStatus(tblEventStatus instance);
    partial void UpdatetblEventStatus(tblEventStatus instance);
    partial void DeletetblEventStatus(tblEventStatus instance);
    partial void InserttblFactory(tblFactory instance);
    partial void UpdatetblFactory(tblFactory instance);
    partial void DeletetblFactory(tblFactory instance);
    partial void InserttblNode(tblNode instance);
    partial void UpdatetblNode(tblNode instance);
    partial void DeletetblNode(tblNode instance);
    partial void InserttblZone(tblZone instance);
    partial void UpdatetblZone(tblZone instance);
    partial void DeletetblZone(tblZone instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblUserLogged(tblUserLogged instance);
    partial void UpdatetblUserLogged(tblUserLogged instance);
    partial void DeletetblUserLogged(tblUserLogged instance);
    partial void InserttblNodeType(tblNodeType instance);
    partial void UpdatetblNodeType(tblNodeType instance);
    partial void DeletetblNodeType(tblNodeType instance);
    partial void InserttblWorkingShift(tblWorkingShift instance);
    partial void UpdatetblWorkingShift(tblWorkingShift instance);
    partial void DeletetblWorkingShift(tblWorkingShift instance);
    partial void InserttblWorkingPlan(tblWorkingPlan instance);
    partial void UpdatetblWorkingPlan(tblWorkingPlan instance);
    partial void DeletetblWorkingPlan(tblWorkingPlan instance);
    partial void InserttblNodeOnline(tblNodeOnline instance);
    partial void UpdatetblNodeOnline(tblNodeOnline instance);
    partial void DeletetblNodeOnline(tblNodeOnline instance);
    partial void InserttblStopWorkingPlan(tblStopWorkingPlan instance);
    partial void UpdatetblStopWorkingPlan(tblStopWorkingPlan instance);
    partial void DeletetblStopWorkingPlan(tblStopWorkingPlan instance);
    partial void InserttblLine(tblLine instance);
    partial void UpdatetblLine(tblLine instance);
    partial void DeletetblLine(tblLine instance);
    partial void InserttblSummaryEventReport(tblSummaryEventReport instance);
    partial void UpdatetblSummaryEventReport(tblSummaryEventReport instance);
    partial void DeletetblSummaryEventReport(tblSummaryEventReport instance);
    partial void InserttblCreatedSummaryReport(tblCreatedSummaryReport instance);
    partial void UpdatetblCreatedSummaryReport(tblCreatedSummaryReport instance);
    partial void DeletetblCreatedSummaryReport(tblCreatedSummaryReport instance);
    partial void InserttblM_Action(tblM_Action instance);
    partial void UpdatetblM_Action(tblM_Action instance);
    partial void DeletetblM_Action(tblM_Action instance);
    partial void InserttblM_MaterialSide(tblM_MaterialSide instance);
    partial void UpdatetblM_MaterialSide(tblM_MaterialSide instance);
    partial void DeletetblM_MaterialSide(tblM_MaterialSide instance);
    partial void InserttblM_MaterialType(tblM_MaterialType instance);
    partial void UpdatetblM_MaterialType(tblM_MaterialType instance);
    partial void DeletetblM_MaterialType(tblM_MaterialType instance);
    partial void InserttblM_Material(tblM_Material instance);
    partial void UpdatetblM_Material(tblM_Material instance);
    partial void DeletetblM_Material(tblM_Material instance);
    partial void InserttblM_MaintHistory(tblM_MaintHistory instance);
    partial void UpdatetblM_MaintHistory(tblM_MaintHistory instance);
    partial void DeletetblM_MaintHistory(tblM_MaintHistory instance);
    partial void InserttblM_MaterialHistory(tblM_MaterialHistory instance);
    partial void UpdatetblM_MaterialHistory(tblM_MaterialHistory instance);
    partial void DeletetblM_MaterialHistory(tblM_MaterialHistory instance);
    #endregion
		
		public AvaniDataContext() : 
				base(global::Model.Properties.Settings.Default.avSVAWF1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AvaniDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvaniDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvaniDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvaniDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblConfigService> tblConfigService
		{
			get
			{
				return this.GetTable<tblConfigService>();
			}
		}
		
		public System.Data.Linq.Table<tblEventDef> tblEventDefs
		{
			get
			{
				return this.GetTable<tblEventDef>();
			}
		}
		
		public System.Data.Linq.Table<tblEventStatus> tblEventStatus
		{
			get
			{
				return this.GetTable<tblEventStatus>();
			}
		}
		
		public System.Data.Linq.Table<tblFactory> tblFactories
		{
			get
			{
				return this.GetTable<tblFactory>();
			}
		}
		
		public System.Data.Linq.Table<tblNode> tblNodes
		{
			get
			{
				return this.GetTable<tblNode>();
			}
		}
		
		public System.Data.Linq.Table<tblNodeDef> tblNodeDefs
		{
			get
			{
				return this.GetTable<tblNodeDef>();
			}
		}
		
		public System.Data.Linq.Table<tblZone> tblZones
		{
			get
			{
				return this.GetTable<tblZone>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblUserLogged> tblUserLoggeds
		{
			get
			{
				return this.GetTable<tblUserLogged>();
			}
		}
		
		public System.Data.Linq.Table<tblNodeType> tblNodeTypes
		{
			get
			{
				return this.GetTable<tblNodeType>();
			}
		}
		
		public System.Data.Linq.Table<tblWorkingShift> tblWorkingShifts
		{
			get
			{
				return this.GetTable<tblWorkingShift>();
			}
		}
		
		public System.Data.Linq.Table<tblWorkingPlan> tblWorkingPlans
		{
			get
			{
				return this.GetTable<tblWorkingPlan>();
			}
		}
		
		public System.Data.Linq.Table<tblNodeOnline> tblNodeOnlines
		{
			get
			{
				return this.GetTable<tblNodeOnline>();
			}
		}
		
		public System.Data.Linq.Table<tblStopWorkingPlan> tblStopWorkingPlans
		{
			get
			{
				return this.GetTable<tblStopWorkingPlan>();
			}
		}
		
		public System.Data.Linq.Table<tblLine> tblLines
		{
			get
			{
				return this.GetTable<tblLine>();
			}
		}
		
		public System.Data.Linq.Table<tblEvent> tblEvents
		{
			get
			{
				return this.GetTable<tblEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblSummaryEventReport> tblSummaryEventReports
		{
			get
			{
				return this.GetTable<tblSummaryEventReport>();
			}
		}
		
		public System.Data.Linq.Table<tblCreatedSummaryReport> tblCreatedSummaryReports
		{
			get
			{
				return this.GetTable<tblCreatedSummaryReport>();
			}
		}
		
		public System.Data.Linq.Table<tblM_Action> tblM_Actions
		{
			get
			{
				return this.GetTable<tblM_Action>();
			}
		}
		
		public System.Data.Linq.Table<tblM_MaterialSide> tblM_MaterialSides
		{
			get
			{
				return this.GetTable<tblM_MaterialSide>();
			}
		}
		
		public System.Data.Linq.Table<tblM_MaterialType> tblM_MaterialTypes
		{
			get
			{
				return this.GetTable<tblM_MaterialType>();
			}
		}
		
		public System.Data.Linq.Table<tblM_Material> tblM_Materials
		{
			get
			{
				return this.GetTable<tblM_Material>();
			}
		}
		
		public System.Data.Linq.Table<tblM_MaintHistory> tblM_MaintHistories
		{
			get
			{
				return this.GetTable<tblM_MaintHistory>();
			}
		}
		
		public System.Data.Linq.Table<tblM_MaterialHistory> tblM_MaterialHistories
		{
			get
			{
				return this.GetTable<tblM_MaterialHistory>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CloseOrder")]
		public int CloseOrder([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ordercode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordercode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OpenOrder")]
		public int OpenOrder([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ordercode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordercode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OpenOnlyOrderReceive")]
		public int OpenOnlyOrderReceive([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ordercode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordercode);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblConfigService")]
	public partial class tblConfigService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<bool> _ExportWorkShift;
		
		private System.Nullable<bool> _ExportWeek;
		
		private System.Nullable<bool> _ExportMonth;
		
		private System.Nullable<bool> _ExportQuarter;
		
		private System.Nullable<bool> _ExportYear;
		
		private string _PathFolder;
		
		private short _DateInWeek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExportWorkShiftChanging(System.Nullable<bool> value);
    partial void OnExportWorkShiftChanged();
    partial void OnExportWeekChanging(System.Nullable<bool> value);
    partial void OnExportWeekChanged();
    partial void OnExportMonthChanging(System.Nullable<bool> value);
    partial void OnExportMonthChanged();
    partial void OnExportQuarterChanging(System.Nullable<bool> value);
    partial void OnExportQuarterChanged();
    partial void OnExportYearChanging(System.Nullable<bool> value);
    partial void OnExportYearChanged();
    partial void OnPathFolderChanging(string value);
    partial void OnPathFolderChanged();
    partial void OnDateInWeekChanging(short value);
    partial void OnDateInWeekChanged();
    #endregion
		
		public tblConfigService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportWorkShift", DbType="Bit")]
		public System.Nullable<bool> ExportWorkShift
		{
			get
			{
				return this._ExportWorkShift;
			}
			set
			{
				if ((this._ExportWorkShift != value))
				{
					this.OnExportWorkShiftChanging(value);
					this.SendPropertyChanging();
					this._ExportWorkShift = value;
					this.SendPropertyChanged("ExportWorkShift");
					this.OnExportWorkShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportWeek", DbType="Bit")]
		public System.Nullable<bool> ExportWeek
		{
			get
			{
				return this._ExportWeek;
			}
			set
			{
				if ((this._ExportWeek != value))
				{
					this.OnExportWeekChanging(value);
					this.SendPropertyChanging();
					this._ExportWeek = value;
					this.SendPropertyChanged("ExportWeek");
					this.OnExportWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportMonth", DbType="Bit")]
		public System.Nullable<bool> ExportMonth
		{
			get
			{
				return this._ExportMonth;
			}
			set
			{
				if ((this._ExportMonth != value))
				{
					this.OnExportMonthChanging(value);
					this.SendPropertyChanging();
					this._ExportMonth = value;
					this.SendPropertyChanged("ExportMonth");
					this.OnExportMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportQuarter", DbType="Bit")]
		public System.Nullable<bool> ExportQuarter
		{
			get
			{
				return this._ExportQuarter;
			}
			set
			{
				if ((this._ExportQuarter != value))
				{
					this.OnExportQuarterChanging(value);
					this.SendPropertyChanging();
					this._ExportQuarter = value;
					this.SendPropertyChanged("ExportQuarter");
					this.OnExportQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportYear", DbType="Bit")]
		public System.Nullable<bool> ExportYear
		{
			get
			{
				return this._ExportYear;
			}
			set
			{
				if ((this._ExportYear != value))
				{
					this.OnExportYearChanging(value);
					this.SendPropertyChanging();
					this._ExportYear = value;
					this.SendPropertyChanged("ExportYear");
					this.OnExportYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathFolder", DbType="NVarChar(255)")]
		public string PathFolder
		{
			get
			{
				return this._PathFolder;
			}
			set
			{
				if ((this._PathFolder != value))
				{
					this.OnPathFolderChanging(value);
					this.SendPropertyChanging();
					this._PathFolder = value;
					this.SendPropertyChanged("PathFolder");
					this.OnPathFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInWeek", DbType="Int")]
		public short DateInWeek
		{
			get
			{
				return this._DateInWeek;
			}
			set
			{
				if ((this._DateInWeek != value))
				{
					this.OnDateInWeekChanging(value);
					this.SendPropertyChanging();
					this._DateInWeek = value;
					this.SendPropertyChanged("DateInWeek");
					this.OnDateInWeekChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEventDef")]
	public partial class tblEventDef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _zOrder;
		
		private string _Color;
		
		private System.Nullable<bool> _UsingSound;
		
		private string _SoundFileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnzOrderChanging(System.Nullable<int> value);
    partial void OnzOrderChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnUsingSoundChanging(System.Nullable<bool> value);
    partial void OnUsingSoundChanged();
    partial void OnSoundFileNameChanging(string value);
    partial void OnSoundFileNameChanged();
    #endregion
		
		public tblEventDef()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zOrder", DbType="Int")]
		public System.Nullable<int> zOrder
		{
			get
			{
				return this._zOrder;
			}
			set
			{
				if ((this._zOrder != value))
				{
					this.OnzOrderChanging(value);
					this.SendPropertyChanging();
					this._zOrder = value;
					this.SendPropertyChanged("zOrder");
					this.OnzOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(255)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingSound", DbType="Bit")]
		public System.Nullable<bool> UsingSound
		{
			get
			{
				return this._UsingSound;
			}
			set
			{
				if ((this._UsingSound != value))
				{
					this.OnUsingSoundChanging(value);
					this.SendPropertyChanging();
					this._UsingSound = value;
					this.SendPropertyChanged("UsingSound");
					this.OnUsingSoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundFileName", DbType="NVarChar(1024)")]
		public string SoundFileName
		{
			get
			{
				return this._SoundFileName;
			}
			set
			{
				if ((this._SoundFileName != value))
				{
					this.OnSoundFileNameChanging(value);
					this.SendPropertyChanging();
					this._SoundFileName = value;
					this.SendPropertyChanged("SoundFileName");
					this.OnSoundFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEventStatus")]
	public partial class tblEventStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblEventStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFactory")]
	public partial class tblFactory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _IP;
		
		private System.Nullable<int> _MaxWaitTime;
		
		private System.Nullable<int> _MaxProcessTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnMaxWaitTimeChanging(System.Nullable<int> value);
    partial void OnMaxWaitTimeChanged();
    partial void OnMaxProcessTimeChanging(System.Nullable<int> value);
    partial void OnMaxProcessTimeChanged();
    #endregion
		
		public tblFactory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxWaitTime", DbType="Int")]
		public System.Nullable<int> MaxWaitTime
		{
			get
			{
				return this._MaxWaitTime;
			}
			set
			{
				if ((this._MaxWaitTime != value))
				{
					this.OnMaxWaitTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxWaitTime = value;
					this.SendPropertyChanged("MaxWaitTime");
					this.OnMaxWaitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxProcessTime", DbType="Int")]
		public System.Nullable<int> MaxProcessTime
		{
			get
			{
				return this._MaxProcessTime;
			}
			set
			{
				if ((this._MaxProcessTime != value))
				{
					this.OnMaxProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxProcessTime = value;
					this.SendPropertyChanged("MaxProcessTime");
					this.OnMaxProcessTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNode")]
	public partial class tblNode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _LineId;
		
		private System.Nullable<int> _ZoneId;
		
		private System.Nullable<int> _NodeTypeId;
		
		private System.Nullable<int> _nOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnLineIdChanging(System.Nullable<int> value);
    partial void OnLineIdChanged();
    partial void OnZoneIdChanging(System.Nullable<int> value);
    partial void OnZoneIdChanged();
    partial void OnNodeTypeIdChanging(System.Nullable<int> value);
    partial void OnNodeTypeIdChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    #endregion
		
		public tblNode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineId", DbType="Int")]
		public System.Nullable<int> LineId
		{
			get
			{
				return this._LineId;
			}
			set
			{
				if ((this._LineId != value))
				{
					this.OnLineIdChanging(value);
					this.SendPropertyChanging();
					this._LineId = value;
					this.SendPropertyChanged("LineId");
					this.OnLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="Int")]
		public System.Nullable<int> ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeId", DbType="Int")]
		public System.Nullable<int> NodeTypeId
		{
			get
			{
				return this._NodeTypeId;
			}
			set
			{
				if ((this._NodeTypeId != value))
				{
					this.OnNodeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeId = value;
					this.SendPropertyChanged("NodeTypeId");
					this.OnNodeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNodeDef")]
	public partial class tblNodeDef
	{
		
		private int _NodeId;
		
		private string _NodeName;
		
		private int _LineId;
		
		private string _LineName;
		
		private int _ZoneId;
		
		private string _ZoneName;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _nOrder;
		
		private System.Nullable<int> _FactoryId;
		
		private string _FactoryName;
		
		private int _NodeTypeId;
		
		private string _NodeTypeName;
		
		public tblNodeDef()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this._NodeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NodeName
		{
			get
			{
				return this._NodeName;
			}
			set
			{
				if ((this._NodeName != value))
				{
					this._NodeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineId", DbType="Int NOT NULL")]
		public int LineId
		{
			get
			{
				return this._LineId;
			}
			set
			{
				if ((this._LineId != value))
				{
					this._LineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(255)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this._LineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="Int NOT NULL")]
		public int ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this._ZoneId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="NVarChar(255)")]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this._ZoneName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this._nOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryId", DbType="Int")]
		public System.Nullable<int> FactoryId
		{
			get
			{
				return this._FactoryId;
			}
			set
			{
				if ((this._FactoryId != value))
				{
					this._FactoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryName", DbType="NVarChar(255)")]
		public string FactoryName
		{
			get
			{
				return this._FactoryName;
			}
			set
			{
				if ((this._FactoryName != value))
				{
					this._FactoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeId", DbType="Int NOT NULL")]
		public int NodeTypeId
		{
			get
			{
				return this._NodeTypeId;
			}
			set
			{
				if ((this._NodeTypeId != value))
				{
					this._NodeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NodeTypeName
		{
			get
			{
				return this._NodeTypeName;
			}
			set
			{
				if ((this._NodeTypeName != value))
				{
					this._NodeTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblZone")]
	public partial class tblZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _Color;
		
		private System.Nullable<int> _FactoryId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnFactoryIdChanging(System.Nullable<int> value);
    partial void OnFactoryIdChanged();
    #endregion
		
		public tblZone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(255)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryId", DbType="Int")]
		public System.Nullable<int> FactoryId
		{
			get
			{
				return this._FactoryId;
			}
			set
			{
				if ((this._FactoryId != value))
				{
					this.OnFactoryIdChanging(value);
					this.SendPropertyChanging();
					this._FactoryId = value;
					this.SendPropertyChanged("FactoryId");
					this.OnFactoryIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Role;
		
		private string _FullName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Avatar;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(20)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserLogged")]
	public partial class tblUserLogged : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private System.DateTime _TimeLogged;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTimeLoggedChanging(System.DateTime value);
    partial void OnTimeLoggedChanged();
    #endregion
		
		public tblUserLogged()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLogged", DbType="Date NOT NULL")]
		public System.DateTime TimeLogged
		{
			get
			{
				return this._TimeLogged;
			}
			set
			{
				if ((this._TimeLogged != value))
				{
					this.OnTimeLoggedChanging(value);
					this.SendPropertyChanging();
					this._TimeLogged = value;
					this.SendPropertyChanged("TimeLogged");
					this.OnTimeLoggedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNodeType")]
	public partial class tblNodeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _MaxStopTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnMaxStopTimeChanging(System.Nullable<int> value);
    partial void OnMaxStopTimeChanged();
    #endregion
		
		public tblNodeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxStopTime", DbType="Int")]
		public System.Nullable<int> MaxStopTime
		{
			get
			{
				return this._MaxStopTime;
			}
			set
			{
				if ((this._MaxStopTime != value))
				{
					this.OnMaxStopTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxStopTime = value;
					this.SendPropertyChanged("MaxStopTime");
					this.OnMaxStopTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWorkingShift")]
	public partial class tblWorkingShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _StartHour;
		
		private int _StartMinute;
		
		private int _FinishHour;
		
		private int _FinishMinute;
		
		private int _TotalMinute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartHourChanging(int value);
    partial void OnStartHourChanged();
    partial void OnStartMinuteChanging(int value);
    partial void OnStartMinuteChanged();
    partial void OnFinishHourChanging(int value);
    partial void OnFinishHourChanged();
    partial void OnFinishMinuteChanging(int value);
    partial void OnFinishMinuteChanged();
    partial void OnTotalMinuteChanging(int value);
    partial void OnTotalMinuteChanged();
    #endregion
		
		public tblWorkingShift()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartHour", DbType="Int NOT NULL")]
		public int StartHour
		{
			get
			{
				return this._StartHour;
			}
			set
			{
				if ((this._StartHour != value))
				{
					this.OnStartHourChanging(value);
					this.SendPropertyChanging();
					this._StartHour = value;
					this.SendPropertyChanged("StartHour");
					this.OnStartHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartMinute", DbType="Int NOT NULL")]
		public int StartMinute
		{
			get
			{
				return this._StartMinute;
			}
			set
			{
				if ((this._StartMinute != value))
				{
					this.OnStartMinuteChanging(value);
					this.SendPropertyChanging();
					this._StartMinute = value;
					this.SendPropertyChanged("StartMinute");
					this.OnStartMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishHour", DbType="Int NOT NULL")]
		public int FinishHour
		{
			get
			{
				return this._FinishHour;
			}
			set
			{
				if ((this._FinishHour != value))
				{
					this.OnFinishHourChanging(value);
					this.SendPropertyChanging();
					this._FinishHour = value;
					this.SendPropertyChanged("FinishHour");
					this.OnFinishHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishMinute", DbType="Int NOT NULL")]
		public int FinishMinute
		{
			get
			{
				return this._FinishMinute;
			}
			set
			{
				if ((this._FinishMinute != value))
				{
					this.OnFinishMinuteChanging(value);
					this.SendPropertyChanging();
					this._FinishMinute = value;
					this.SendPropertyChanged("FinishMinute");
					this.OnFinishMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMinute", DbType="Int NOT NULL")]
		public int TotalMinute
		{
			get
			{
				return this._TotalMinute;
			}
			set
			{
				if ((this._TotalMinute != value))
				{
					this.OnTotalMinuteChanging(value);
					this.SendPropertyChanging();
					this._TotalMinute = value;
					this.SendPropertyChanged("TotalMinute");
					this.OnTotalMinuteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWorkingPlan")]
	public partial class tblWorkingPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _WorkingId;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private int _ShiftId;
		
		private int _NodeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnWorkingIdChanging(int value);
    partial void OnWorkingIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnShiftIdChanging(int value);
    partial void OnShiftIdChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    #endregion
		
		public tblWorkingPlan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingId", DbType="Int NOT NULL")]
		public int WorkingId
		{
			get
			{
				return this._WorkingId;
			}
			set
			{
				if ((this._WorkingId != value))
				{
					this.OnWorkingIdChanging(value);
					this.SendPropertyChanging();
					this._WorkingId = value;
					this.SendPropertyChanged("WorkingId");
					this.OnWorkingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="Int NOT NULL")]
		public int ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNodeOnline")]
	public partial class tblNodeOnline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NodeId;
		
		private string _NodeName;
		
		private int _LineId;
		
		private string _LineName;
		
		private int _ZoneId;
		
		private string _ZoneName;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _nOrder;
		
		private int _FactoryId;
		
		private string _FactoryName;
		
		private int _NodeTypeId;
		
		private string _NodeTypeName;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _DataToShow;
		
		private System.Nullable<long> _OnlineTimeCount;
		
		private System.Nullable<long> _WorkingTimeCount;
		
		private System.Nullable<int> _TimeOut;
		
		private string _Planned;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnNodeNameChanging(string value);
    partial void OnNodeNameChanged();
    partial void OnLineIdChanging(int value);
    partial void OnLineIdChanged();
    partial void OnLineNameChanging(string value);
    partial void OnLineNameChanged();
    partial void OnZoneIdChanging(int value);
    partial void OnZoneIdChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    partial void OnFactoryIdChanging(int value);
    partial void OnFactoryIdChanged();
    partial void OnFactoryNameChanging(string value);
    partial void OnFactoryNameChanged();
    partial void OnNodeTypeIdChanging(int value);
    partial void OnNodeTypeIdChanged();
    partial void OnNodeTypeNameChanging(string value);
    partial void OnNodeTypeNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnDataToShowChanging(string value);
    partial void OnDataToShowChanged();
    partial void OnOnlineTimeCountChanging(System.Nullable<long> value);
    partial void OnOnlineTimeCountChanged();
    partial void OnWorkingTimeCountChanging(System.Nullable<long> value);
    partial void OnWorkingTimeCountChanged();
    partial void OnTimeOutChanging(System.Nullable<int> value);
    partial void OnTimeOutChanged();
    partial void OnPlannedChanging(string value);
    partial void OnPlannedChanged();
    #endregion
		
		public tblNodeOnline()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NodeName
		{
			get
			{
				return this._NodeName;
			}
			set
			{
				if ((this._NodeName != value))
				{
					this.OnNodeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeName = value;
					this.SendPropertyChanged("NodeName");
					this.OnNodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineId", DbType="Int NOT NULL")]
		public int LineId
		{
			get
			{
				return this._LineId;
			}
			set
			{
				if ((this._LineId != value))
				{
					this.OnLineIdChanging(value);
					this.SendPropertyChanging();
					this._LineId = value;
					this.SendPropertyChanged("LineId");
					this.OnLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(255)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this.OnLineNameChanging(value);
					this.SendPropertyChanging();
					this._LineName = value;
					this.SendPropertyChanged("LineName");
					this.OnLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="Int NOT NULL")]
		public int ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryId", DbType="Int NOT NULL")]
		public int FactoryId
		{
			get
			{
				return this._FactoryId;
			}
			set
			{
				if ((this._FactoryId != value))
				{
					this.OnFactoryIdChanging(value);
					this.SendPropertyChanging();
					this._FactoryId = value;
					this.SendPropertyChanged("FactoryId");
					this.OnFactoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FactoryName
		{
			get
			{
				return this._FactoryName;
			}
			set
			{
				if ((this._FactoryName != value))
				{
					this.OnFactoryNameChanging(value);
					this.SendPropertyChanging();
					this._FactoryName = value;
					this.SendPropertyChanged("FactoryName");
					this.OnFactoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeId", DbType="Int NOT NULL")]
		public int NodeTypeId
		{
			get
			{
				return this._NodeTypeId;
			}
			set
			{
				if ((this._NodeTypeId != value))
				{
					this.OnNodeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeId = value;
					this.SendPropertyChanged("NodeTypeId");
					this.OnNodeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NodeTypeName
		{
			get
			{
				return this._NodeTypeName;
			}
			set
			{
				if ((this._NodeTypeName != value))
				{
					this.OnNodeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeName = value;
					this.SendPropertyChanged("NodeTypeName");
					this.OnNodeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(30)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataToShow", DbType="NVarChar(1024)")]
		public string DataToShow
		{
			get
			{
				return this._DataToShow;
			}
			set
			{
				if ((this._DataToShow != value))
				{
					this.OnDataToShowChanging(value);
					this.SendPropertyChanging();
					this._DataToShow = value;
					this.SendPropertyChanged("DataToShow");
					this.OnDataToShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineTimeCount", DbType="BigInt")]
		public System.Nullable<long> OnlineTimeCount
		{
			get
			{
				return this._OnlineTimeCount;
			}
			set
			{
				if ((this._OnlineTimeCount != value))
				{
					this.OnOnlineTimeCountChanging(value);
					this.SendPropertyChanging();
					this._OnlineTimeCount = value;
					this.SendPropertyChanged("OnlineTimeCount");
					this.OnOnlineTimeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingTimeCount", DbType="BigInt")]
		public System.Nullable<long> WorkingTimeCount
		{
			get
			{
				return this._WorkingTimeCount;
			}
			set
			{
				if ((this._WorkingTimeCount != value))
				{
					this.OnWorkingTimeCountChanging(value);
					this.SendPropertyChanging();
					this._WorkingTimeCount = value;
					this.SendPropertyChanged("WorkingTimeCount");
					this.OnWorkingTimeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="Int")]
		public System.Nullable<int> TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this.OnTimeOutChanging(value);
					this.SendPropertyChanging();
					this._TimeOut = value;
					this.SendPropertyChanged("TimeOut");
					this.OnTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned", DbType="NVarChar(50)", CanBeNull=false)]
		public string Planned
		{
			get
			{
				return this._Planned;
			}
			set
			{
				if ((this._Planned != value))
				{
					this.OnPlannedChanging(value);
					this.SendPropertyChanging();
					this._Planned = value;
					this.SendPropertyChanged("Planned");
					this.OnPlannedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStopWorkingPlan")]
	public partial class tblStopWorkingPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _WorkingId;
		
		private int _NodeId;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private int _FromHour;
		
		private int _FromMinute;
		
		private int _ToHour;
		
		private int _ToMinute;
		
		private int _TotalMinute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnWorkingIdChanging(int value);
    partial void OnWorkingIdChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnFromHourChanging(int value);
    partial void OnFromHourChanged();
    partial void OnFromMinuteChanging(int value);
    partial void OnFromMinuteChanged();
    partial void OnToHourChanging(int value);
    partial void OnToHourChanged();
    partial void OnToMinuteChanging(int value);
    partial void OnToMinuteChanged();
    partial void OnTotalMinuteChanging(int value);
    partial void OnTotalMinuteChanged();
    #endregion
		
		public tblStopWorkingPlan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingId", DbType="Int NOT NULL")]
		public int WorkingId
		{
			get
			{
				return this._WorkingId;
			}
			set
			{
				if ((this._WorkingId != value))
				{
					this.OnWorkingIdChanging(value);
					this.SendPropertyChanging();
					this._WorkingId = value;
					this.SendPropertyChanged("WorkingId");
					this.OnWorkingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromHour", DbType="Int NOT NULL")]
		public int FromHour
		{
			get
			{
				return this._FromHour;
			}
			set
			{
				if ((this._FromHour != value))
				{
					this.OnFromHourChanging(value);
					this.SendPropertyChanging();
					this._FromHour = value;
					this.SendPropertyChanged("FromHour");
					this.OnFromHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMinute", DbType="Int NOT NULL")]
		public int FromMinute
		{
			get
			{
				return this._FromMinute;
			}
			set
			{
				if ((this._FromMinute != value))
				{
					this.OnFromMinuteChanging(value);
					this.SendPropertyChanging();
					this._FromMinute = value;
					this.SendPropertyChanged("FromMinute");
					this.OnFromMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToHour", DbType="Int NOT NULL")]
		public int ToHour
		{
			get
			{
				return this._ToHour;
			}
			set
			{
				if ((this._ToHour != value))
				{
					this.OnToHourChanging(value);
					this.SendPropertyChanging();
					this._ToHour = value;
					this.SendPropertyChanged("ToHour");
					this.OnToHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMinute", DbType="Int NOT NULL")]
		public int ToMinute
		{
			get
			{
				return this._ToMinute;
			}
			set
			{
				if ((this._ToMinute != value))
				{
					this.OnToMinuteChanging(value);
					this.SendPropertyChanging();
					this._ToMinute = value;
					this.SendPropertyChanged("ToMinute");
					this.OnToMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMinute", DbType="Int NOT NULL")]
		public int TotalMinute
		{
			get
			{
				return this._TotalMinute;
			}
			set
			{
				if ((this._TotalMinute != value))
				{
					this.OnTotalMinuteChanging(value);
					this.SendPropertyChanging();
					this._TotalMinute = value;
					this.SendPropertyChanged("TotalMinute");
					this.OnTotalMinuteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLine")]
	public partial class tblLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _FactoryId;
		
		private System.Nullable<int> _nOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFactoryIdChanging(System.Nullable<int> value);
    partial void OnFactoryIdChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    #endregion
		
		public tblLine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryId", DbType="Int")]
		public System.Nullable<int> FactoryId
		{
			get
			{
				return this._FactoryId;
			}
			set
			{
				if ((this._FactoryId != value))
				{
					this.OnFactoryIdChanging(value);
					this.SendPropertyChanging();
					this._FactoryId = value;
					this.SendPropertyChanged("FactoryId");
					this.OnFactoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvent")]
	public partial class tblEvent
	{
		
		private long _Id;
		
		private System.Nullable<int> _NodeId;
		
		private System.Nullable<int> _EventDefId;
		
		private System.Nullable<System.DateTime> _T3;
		
		private System.Nullable<System.DateTime> _T2;
		
		private System.Nullable<System.DateTime> _T1;
		
		public tblEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int")]
		public System.Nullable<int> NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this._NodeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDefId", DbType="Int")]
		public System.Nullable<int> EventDefId
		{
			get
			{
				return this._EventDefId;
			}
			set
			{
				if ((this._EventDefId != value))
				{
					this._EventDefId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T3", DbType="DateTime")]
		public System.Nullable<System.DateTime> T3
		{
			get
			{
				return this._T3;
			}
			set
			{
				if ((this._T3 != value))
				{
					this._T3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T2", DbType="DateTime")]
		public System.Nullable<System.DateTime> T2
		{
			get
			{
				return this._T2;
			}
			set
			{
				if ((this._T2 != value))
				{
					this._T2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T1", DbType="DateTime")]
		public System.Nullable<System.DateTime> T1
		{
			get
			{
				return this._T1;
			}
			set
			{
				if ((this._T1 != value))
				{
					this._T1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSummaryEventReport")]
	public partial class tblSummaryEventReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private int _WorkShiftId;
		
		private long _NodeId;
		
		private string _NodeName;
		
		private System.Nullable<int> _LineId;
		
		private string _LineName;
		
		private System.Nullable<int> _ZoneId;
		
		private string _ZoneName;
		
		private System.Nullable<int> _NodeTypeId;
		
		private string _NodeTypeName;
		
		private System.Nullable<int> _FactoryId;
		
		private System.Nullable<int> _NumberOfRunning;
		
		private System.Nullable<double> _RunningDuration;
		
		private System.Nullable<int> _NumberOfStop;
		
		private System.Nullable<double> _StopDuration;
		
		private System.Nullable<long> _PlanDuration;
		
		private System.Nullable<double> _RunningRate;
		
		private long _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnWorkShiftIdChanging(int value);
    partial void OnWorkShiftIdChanged();
    partial void OnNodeIdChanging(long value);
    partial void OnNodeIdChanged();
    partial void OnNodeNameChanging(string value);
    partial void OnNodeNameChanged();
    partial void OnLineIdChanging(System.Nullable<int> value);
    partial void OnLineIdChanged();
    partial void OnLineNameChanging(string value);
    partial void OnLineNameChanged();
    partial void OnZoneIdChanging(System.Nullable<int> value);
    partial void OnZoneIdChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnNodeTypeIdChanging(System.Nullable<int> value);
    partial void OnNodeTypeIdChanged();
    partial void OnNodeTypeNameChanging(string value);
    partial void OnNodeTypeNameChanged();
    partial void OnFactoryIdChanging(System.Nullable<int> value);
    partial void OnFactoryIdChanged();
    partial void OnNumberOfRunningChanging(System.Nullable<int> value);
    partial void OnNumberOfRunningChanged();
    partial void OnRunningDurationChanging(System.Nullable<double> value);
    partial void OnRunningDurationChanged();
    partial void OnNumberOfStopChanging(System.Nullable<int> value);
    partial void OnNumberOfStopChanged();
    partial void OnStopDurationChanging(System.Nullable<double> value);
    partial void OnStopDurationChanged();
    partial void OnPlanDurationChanging(System.Nullable<long> value);
    partial void OnPlanDurationChanged();
    partial void OnRunningRateChanging(System.Nullable<double> value);
    partial void OnRunningRateChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    #endregion
		
		public tblSummaryEventReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkShiftId", DbType="Int NOT NULL")]
		public int WorkShiftId
		{
			get
			{
				return this._WorkShiftId;
			}
			set
			{
				if ((this._WorkShiftId != value))
				{
					this.OnWorkShiftIdChanging(value);
					this.SendPropertyChanging();
					this._WorkShiftId = value;
					this.SendPropertyChanged("WorkShiftId");
					this.OnWorkShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="BigInt NOT NULL")]
		public long NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeName", DbType="NVarChar(1024)")]
		public string NodeName
		{
			get
			{
				return this._NodeName;
			}
			set
			{
				if ((this._NodeName != value))
				{
					this.OnNodeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeName = value;
					this.SendPropertyChanged("NodeName");
					this.OnNodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineId", DbType="Int")]
		public System.Nullable<int> LineId
		{
			get
			{
				return this._LineId;
			}
			set
			{
				if ((this._LineId != value))
				{
					this.OnLineIdChanging(value);
					this.SendPropertyChanging();
					this._LineId = value;
					this.SendPropertyChanged("LineId");
					this.OnLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(1024)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this.OnLineNameChanging(value);
					this.SendPropertyChanging();
					this._LineName = value;
					this.SendPropertyChanged("LineName");
					this.OnLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="Int")]
		public System.Nullable<int> ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="NVarChar(1024)")]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeId", DbType="Int")]
		public System.Nullable<int> NodeTypeId
		{
			get
			{
				return this._NodeTypeId;
			}
			set
			{
				if ((this._NodeTypeId != value))
				{
					this.OnNodeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeId = value;
					this.SendPropertyChanged("NodeTypeId");
					this.OnNodeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeName", DbType="NVarChar(1024)")]
		public string NodeTypeName
		{
			get
			{
				return this._NodeTypeName;
			}
			set
			{
				if ((this._NodeTypeName != value))
				{
					this.OnNodeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeName = value;
					this.SendPropertyChanged("NodeTypeName");
					this.OnNodeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryId", DbType="Int")]
		public System.Nullable<int> FactoryId
		{
			get
			{
				return this._FactoryId;
			}
			set
			{
				if ((this._FactoryId != value))
				{
					this.OnFactoryIdChanging(value);
					this.SendPropertyChanging();
					this._FactoryId = value;
					this.SendPropertyChanged("FactoryId");
					this.OnFactoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfRunning", DbType="Int")]
		public System.Nullable<int> NumberOfRunning
		{
			get
			{
				return this._NumberOfRunning;
			}
			set
			{
				if ((this._NumberOfRunning != value))
				{
					this.OnNumberOfRunningChanging(value);
					this.SendPropertyChanging();
					this._NumberOfRunning = value;
					this.SendPropertyChanged("NumberOfRunning");
					this.OnNumberOfRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningDuration", DbType="Float")]
		public System.Nullable<double> RunningDuration
		{
			get
			{
				return this._RunningDuration;
			}
			set
			{
				if ((this._RunningDuration != value))
				{
					this.OnRunningDurationChanging(value);
					this.SendPropertyChanging();
					this._RunningDuration = value;
					this.SendPropertyChanged("RunningDuration");
					this.OnRunningDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStop", DbType="Int")]
		public System.Nullable<int> NumberOfStop
		{
			get
			{
				return this._NumberOfStop;
			}
			set
			{
				if ((this._NumberOfStop != value))
				{
					this.OnNumberOfStopChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStop = value;
					this.SendPropertyChanged("NumberOfStop");
					this.OnNumberOfStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDuration", DbType="Float")]
		public System.Nullable<double> StopDuration
		{
			get
			{
				return this._StopDuration;
			}
			set
			{
				if ((this._StopDuration != value))
				{
					this.OnStopDurationChanging(value);
					this.SendPropertyChanging();
					this._StopDuration = value;
					this.SendPropertyChanged("StopDuration");
					this.OnStopDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDuration", DbType="BigInt")]
		public System.Nullable<long> PlanDuration
		{
			get
			{
				return this._PlanDuration;
			}
			set
			{
				if ((this._PlanDuration != value))
				{
					this.OnPlanDurationChanging(value);
					this.SendPropertyChanging();
					this._PlanDuration = value;
					this.SendPropertyChanged("PlanDuration");
					this.OnPlanDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningRate", DbType="Float")]
		public System.Nullable<double> RunningRate
		{
			get
			{
				return this._RunningRate;
			}
			set
			{
				if ((this._RunningRate != value))
				{
					this.OnRunningRateChanging(value);
					this.SendPropertyChanging();
					this._RunningRate = value;
					this.SendPropertyChanged("RunningRate");
					this.OnRunningRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCreatedSummaryReport")]
	public partial class tblCreatedSummaryReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    #endregion
		
		public tblCreatedSummaryReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_Action")]
	public partial class tblM_Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _nOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    #endregion
		
		public tblM_Action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_MaterialSide")]
	public partial class tblM_MaterialSide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _nOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    #endregion
		
		public tblM_MaterialSide()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_MaterialType")]
	public partial class tblM_MaterialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _nOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnnOrderChanging(System.Nullable<int> value);
    partial void OnnOrderChanged();
    #endregion
		
		public tblM_MaterialType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nOrder", DbType="Int")]
		public System.Nullable<int> nOrder
		{
			get
			{
				return this._nOrder;
			}
			set
			{
				if ((this._nOrder != value))
				{
					this.OnnOrderChanging(value);
					this.SendPropertyChanging();
					this._nOrder = value;
					this.SendPropertyChanged("nOrder");
					this.OnnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_Material")]
	public partial class tblM_Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<long> _Hour;
		
		private System.Nullable<double> _WarningLevel;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Slide;
		
		private string _ApplyFor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHourChanging(System.Nullable<long> value);
    partial void OnHourChanged();
    partial void OnWarningLevelChanging(System.Nullable<double> value);
    partial void OnWarningLevelChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnSlideChanging(System.Nullable<int> value);
    partial void OnSlideChanged();
    partial void OnApplyForChanging(string value);
    partial void OnApplyForChanged();
    #endregion
		
		public tblM_Material()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="BigInt")]
		public System.Nullable<long> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningLevel", DbType="Float")]
		public System.Nullable<double> WarningLevel
		{
			get
			{
				return this._WarningLevel;
			}
			set
			{
				if ((this._WarningLevel != value))
				{
					this.OnWarningLevelChanging(value);
					this.SendPropertyChanging();
					this._WarningLevel = value;
					this.SendPropertyChanged("WarningLevel");
					this.OnWarningLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="Int")]
		public System.Nullable<int> Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this.OnSlideChanging(value);
					this.SendPropertyChanging();
					this._Slide = value;
					this.SendPropertyChanged("Slide");
					this.OnSlideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyFor", DbType="NVarChar(50)")]
		public string ApplyFor
		{
			get
			{
				return this._ApplyFor;
			}
			set
			{
				if ((this._ApplyFor != value))
				{
					this.OnApplyForChanging(value);
					this.SendPropertyChanging();
					this._ApplyFor = value;
					this.SendPropertyChanged("ApplyFor");
					this.OnApplyForChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_MaintHistory")]
	public partial class tblM_MaintHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _NodeId;
		
		private long _MaterialId;
		
		private System.DateTime _ActionDate;
		
		private int _ActionId;
		
		private string _ActionUserName;
		
		private double _RunningHour;
		
		private System.Nullable<double> _NextAction;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnMaterialIdChanging(long value);
    partial void OnMaterialIdChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnActionUserNameChanging(string value);
    partial void OnActionUserNameChanged();
    partial void OnRunningHourChanging(double value);
    partial void OnRunningHourChanged();
    partial void OnNextActionChanging(System.Nullable<double> value);
    partial void OnNextActionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblM_MaintHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="BigInt NOT NULL")]
		public long MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionUserName", DbType="NVarChar(255)")]
		public string ActionUserName
		{
			get
			{
				return this._ActionUserName;
			}
			set
			{
				if ((this._ActionUserName != value))
				{
					this.OnActionUserNameChanging(value);
					this.SendPropertyChanging();
					this._ActionUserName = value;
					this.SendPropertyChanged("ActionUserName");
					this.OnActionUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningHour", DbType="Float NOT NULL")]
		public double RunningHour
		{
			get
			{
				return this._RunningHour;
			}
			set
			{
				if ((this._RunningHour != value))
				{
					this.OnRunningHourChanging(value);
					this.SendPropertyChanging();
					this._RunningHour = value;
					this.SendPropertyChanged("RunningHour");
					this.OnRunningHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextAction", DbType="Float")]
		public System.Nullable<double> NextAction
		{
			get
			{
				return this._NextAction;
			}
			set
			{
				if ((this._NextAction != value))
				{
					this.OnNextActionChanging(value);
					this.SendPropertyChanging();
					this._NextAction = value;
					this.SendPropertyChanged("NextAction");
					this.OnNextActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2048)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblM_MaterialHistory")]
	public partial class tblM_MaterialHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _MaterialId;
		
		private System.DateTime _UpdateTime;
		
		private int _UpdateType;
		
		private int _UpdateUser;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<long> _Hour;
		
		private System.Nullable<double> _WarningLevel;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Slide;
		
		private string _ApplyFor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMaterialIdChanging(long value);
    partial void OnMaterialIdChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnUpdateTypeChanging(int value);
    partial void OnUpdateTypeChanged();
    partial void OnUpdateUserChanging(int value);
    partial void OnUpdateUserChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHourChanging(System.Nullable<long> value);
    partial void OnHourChanged();
    partial void OnWarningLevelChanging(System.Nullable<double> value);
    partial void OnWarningLevelChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnSlideChanging(System.Nullable<int> value);
    partial void OnSlideChanged();
    partial void OnApplyForChanging(string value);
    partial void OnApplyForChanged();
    #endregion
		
		public tblM_MaterialHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="BigInt NOT NULL")]
		public long MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateType", DbType="Int NOT NULL")]
		public int UpdateType
		{
			get
			{
				return this._UpdateType;
			}
			set
			{
				if ((this._UpdateType != value))
				{
					this.OnUpdateTypeChanging(value);
					this.SendPropertyChanging();
					this._UpdateType = value;
					this.SendPropertyChanged("UpdateType");
					this.OnUpdateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="Int NOT NULL")]
		public int UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="BigInt")]
		public System.Nullable<long> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningLevel", DbType="Float")]
		public System.Nullable<double> WarningLevel
		{
			get
			{
				return this._WarningLevel;
			}
			set
			{
				if ((this._WarningLevel != value))
				{
					this.OnWarningLevelChanging(value);
					this.SendPropertyChanging();
					this._WarningLevel = value;
					this.SendPropertyChanged("WarningLevel");
					this.OnWarningLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="Int")]
		public System.Nullable<int> Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this.OnSlideChanging(value);
					this.SendPropertyChanging();
					this._Slide = value;
					this.SendPropertyChanged("Slide");
					this.OnSlideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyFor", DbType="NVarChar(50)")]
		public string ApplyFor
		{
			get
			{
				return this._ApplyFor;
			}
			set
			{
				if ((this._ApplyFor != value))
				{
					this.OnApplyForChanging(value);
					this.SendPropertyChanging();
					this._ApplyFor = value;
					this.SendPropertyChanged("ApplyFor");
					this.OnApplyForChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
